
name: "GKE in actions"

on:
  push:
    paths:
    - '01-landingzone/**'
    branches:
      - main
  pull_request:

jobs:
  terraform-network:
    name: "Terraform-network"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        working-directory: [01-landingzone/networks]
    defaults:
      run:
        working-directory: ${{ matrix.working-directory }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: 'projects/244319587013/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
          service_account: 'my-service-account@team-alpha-mgmt.iam.gserviceaccount.com'

      #- name: Terraform Format
       # id: fmt
        #run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init
          
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' 
        run: terraform apply -auto-approve

  terraform-dev:
    name: "Terraform-dev"
    runs-on: ubuntu-latest
    needs: terraform-network
    strategy:
      matrix:
        working-directory: [01-landingzone/dev]
    defaults:
      run:
        working-directory: ${{ matrix.working-directory }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: 'projects/244319587013/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
          service_account: 'my-service-account@team-alpha-mgmt.iam.gserviceaccount.com'

      #- name: Terraform Format
       # id: fmt
        #run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init
          
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' 
        run: terraform apply -auto-approve
  
  bootstrap:
    name: bootstrap-cluster
    runs-on: ubuntu-latest
    needs: terraform-dev
    steps:
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/244319587013/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
          service_account: 'my-service-account@team-alpha-mgmt.iam.gserviceaccount.com'


      - id: get-credentials
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' 
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: poc-cluster-dev
          location: us-central1-a
          project_id: team-alpha-mgmt
      
      - id: get-pods
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' 
        run: kubectl get pods -A 

      - id: install-xp
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' 
        run: |
          helm repo add crossplane-stable https://charts.crossplane.io/stable && helm repo update
          helm install crossplane crossplane-stable/crossplane --namespace crossplane-system --create-namespace

      - id: install-argocd
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' 
        run: |
          helm repo add argo https://argoproj.github.io/argo-helm
          helm install argocd argo/argo-cd --namespace argo-ns --create-namespace

      - id: get-argo-ns
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' 
        run: kubectl get pods -A

      - id: get-pods-after-bootstrap
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: kubectl get pods -A

#testing patch


  patch-argo:
    name: patch-argo
    runs-on: ubuntu-latest
    needs: bootstrap
    steps:
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/244319587013/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
          service_account: 'my-service-account@team-alpha-mgmt.iam.gserviceaccount.com'


      - id: get-credentials
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' 
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: poc-cluster-dev
          location: us-central1-a
          project_id: team-alpha-mgmt
      
      - id: get-pods
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' 
        run: kubectl get pods -A 
        
      - id: patch-LB
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' 
        run: kubectl patch svc argocd-server -n argo-ns -p '{"spec":{"type":"LoadBalancer"}}'